<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>global.DocumentationHelper</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Helper functions for Documentation generation.</description>
        <name>DocumentationHelper</name>
        <script><![CDATA[var DocumentationHelper = Class.create();
DocumentationHelper.prototype = {
initialize: function() {
},

/**
 * Get all Application files 
 * @param {String} applicationID 
 * @returns Array of JSON Objects (sys_name', 'sys_class_name', 'sys_update_name')
 */
getAllApplicationFiles: function (applicationID) {
this.logDebug('getAllApplicationFiles', 'input::', applicationID);

var applicationFiles = new global.GlideQuery('sys_metadata')
.where('sys_scope', applicationID)
.orderByDesc('sys_class_name')
.select('sys_name', 'sys_class_name','sys_class_name$DISPLAY' , 'sys_update_name')
.toArray(100); // <-- TODO:: reavaluate this, could be more files.

this.logDebug('getAllApplicationFiles', 'output::', applicationFiles);
return applicationFiles;
},

/**
 * Create Knowledge Article
 * @param {String} data 
 */
createKbArticle: function (data){
var article = new global.GlideQuery('kb_knowledge')
.insert({
short_description: 'Docuemntation', // <-- TODO: The name should reflect whats being documented.
kb_knowledge_base: gs.getProperty('documentation.knowledgebase'),
text: data})
.get();

this.logDebug('createKbArticle', 'created record::', JSON.stringify(article, null, 2));
},


// setSectionHeader: function (className){

//     return
// },


// Function - Select Template --> TODO --> 
getTemplate: function (glideRecord) {

var payload = '';
var instanceName = gs.getProperty('documentation.instancename') != '' ? gs.getProperty('documentation.instancename') : gs.getProperty('instance_name');
switch(glideRecord.sys_class_name.toString()) {

case 'sys_script_include':
    payload = '<div>' + //<h2>Script Includes</h2>
    '<h3>'+ glideRecord.name + '</h3>' +
    '<p>'+ glideRecord.description + '</p>' + 
    '<p> Active: ' + glideRecord.active + '</p>'+
    '<p>'+'API name: ' + glideRecord.api_name + '</p>'+ 
    '<p>'+'Caller access: ' + glideRecord.caller_access + '</p>'+
    '<p><a href="https://'+ instanceName+'.service-now.com/now/nav/ui/classic/params/target/'+glideRecord.sys_class_name.toString()+'.do%3Fsys_id%3D'+glideRecord.sys_id+'">Link: '+glideRecord.name +'</a></p>' +
    '<h4> Versions </h4>' +
    this.buildHTMLTable(['Name','Source','Created'],this.getVersions(glideRecord.sys_update_name)) +
    '</div>';
    
    this.logDebug('getTemplate', 'Script Include Payload::', payload);
    
    break;

case 'sys_script':
    payload = //'<div>' + //<h2> Business Rules </h2>
    '<h3>'+ glideRecord.name + '</h3>' + 
    '<p>' + glideRecord.description + '</p>' +
    '<p> Active: ' + glideRecord.active + '</p>'+
    '<p> Abort action: ' + glideRecord.abort_action + '</p>' +
    '<p> Access: ' + glideRecord.access + '</p>' +
    '<p>' + glideRecord.action_delete + '</p>' +
    '<p>' + glideRecord.action_insert + '</p>' +
    '<p>' + glideRecord.action_query + '</p>' +
    '<p>' + glideRecord.action_update + '</p>' +
    '<p>' + glideRecord.add_message + '</p>' +
    '<p>' + glideRecord.change_fields + '</p>' + //<-- TODO: Do think this relates to related fields, do check!
    '<p>' + glideRecord.client_callable + '</p>' +
    '<p>' + glideRecord.collection + '</p>' +
    '<p>' + glideRecord.condition + '</p>' +
    '<p>' + glideRecord.execute_function + '</p>' +
    '<p>' + glideRecord.filter_condition + '</p>' +
    '<p>' + glideRecord.is_rest + '</p>' +
    '<p>' + glideRecord.message + '</p>' +
    '<p>' + glideRecord.order + '</p>' +
    '<p>' + glideRecord.priority + '</p>' +
    '<p>' + glideRecord.role_conditions + '</p>' +
    '<h4> Versions </h4>' +
    //this.buildHTMLTable(this.getVersions(glideRecord.sys_update_name)) +
    this.buildHTMLTable(['Name','Source','Created'],this.getVersions(glideRecord.sys_update_name)) +
    //'</div>';
    
    this.logDebug('getTemplate', 'Business Rule Payload::', payload);
    
    break;

case 'sys_properties':
    payload = 
    '<h3>'+ glideRecord.name + '</h3>' + 
    '<p>' + glideRecord.description + '</p>' +
    '<p> Type: ' + glideRecord.type + '</p>'+
    '<p> Value: ' + glideRecord.value + '</p>' +
    '<p> Read roles: ' + glideRecord.read_roles + '</p>' +
    '<p> Write roles' + glideRecord.write_roles + '</p>' +
    '<h4> Versions </h4>' +
    //this.buildHTMLTable(this.getVersions(glideRecord.sys_update_name)) +
    this.buildHTMLTable(['Name','Source','Created'],this.getVersions(glideRecord.sys_update_name)) +
    //'</div>';
    
    this.logDebug('getTemplate', 'System Property Payload::', payload);

break;

// case b:
// // code block
// break;
// case c:
// // code block
// break;
// case d:
// // code block
// break;
// case e:
// // code block
// break;
default:

payload = //'<div>' + //<h2> Business Rules </h2>
'<h3>'+ glideRecord.sys_name + '</h3>' + 
'<h4> Versions </h4>' +
//this.buildHTMLTable(this.getVersions(glideRecord.sys_update_name)) +
this.buildHTMLTable(['Name','Source','Created'],this.getVersions(glideRecord.sys_update_name)) +
//'</div>';

this.logDebug('getTemplate', 'Default Payload::', payload);


}

return payload;

},

// Function - Get Versions
getVersions: function(sys_update_name){

var versions = new global.GlideQuery('sys_update_version')
.where('name', sys_update_name)
.orderByDesc('sys_created_on')
.select('name', 'source$DISPLAY', 'sys_created_on')
.toArray(5);

this.logDebug('getVersions', 'output::', JSON.stringify(versions, null, 2));
return versions;
},


// /**
//  * buildHTMLTable
//  * @param {Array} versionArray 
//  * @returns String
//  */
// buildHTMLTable: function (versionArray) {
// this.logDebug('buildHTMLTable', 'input::', JSON.stringify(versionArray, null, 2));

// var tablePayload = '<table>'+
// '<tr>'+
// '<th>Name</th>'+
// '<th>Source</th>'+
// '<th>Created</th>'+
// '</tr>';

// for (var i = 0; i < versionArray.length; i++) {
// var tableRow = '<tr><td>' + versionArray[i].name +
// '  </td><td>'+ 
// versionArray[i].source$DISPLAY +
// '  </td><td>' + versionArray[i].sys_created_on +
// '</tr>';
// tablePayload = tablePayload + tableRow;
// }
// tablePayload = tablePayload + '</table>';

// this.logDebug('buildHTMLTable', 'output::', tablePayload);
// return tablePayload;
// },

buildHTMLTable: function (headers, rows) {
    //var functionHeaders = JSON.stringify(headers);
    var tableHeaders = '<table><tr>';
    var tablePayload = '';

 for (var i = 0; i < headers.length; i++) {
    //gs.info('for loop header: ' + JSON.stringify(headers[i]));
        var headerRow = '<th>' + headers[i] +'</th>';
        tableHeaders = tableHeaders + headerRow;
    }
    tableHeaders = tableHeaders + '</tr>';

    for (var m = 0; m < rows.length; m++) {
        var tableRow = '<tr><td>' + rows[m].name + 
        '</td><td>'+ 
        rows[m].source$DISPLAY +
        '</td><td>' + rows[m].sys_created_on +
        '</tr>';
        tablePayload = tablePayload + tableRow;
    gs.info(tableRow);
        }
        tablePayload = tableHeaders + tablePayload + '</table>';

        this.logDebug('buildHTMLTable', 'output::', tablePayload);
        return tablePayload;

},


// Function - Build payload



// Function -  Debug
logDebug: function (origin, message, value){

var debug = gs.getProperty('documentation.debugging');

if (debug == 'true'){
gs.info('[['+ origin + ']]:: ' + message + ' :: ' + value);

}else { 
return;
}
},

type: 'DocumentationHelper'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-11 18:54:51</sys_created_on>
        <sys_id>d56f6b7e1b60111090f54196bc4bcb0f</sys_id>
        <sys_mod_count>126</sys_mod_count>
        <sys_name>DocumentationHelper</sys_name>
        <sys_package display_value="Documentation Helper" source="c22d27fa1b20111090f54196bc4bcb37">c22d27fa1b20111090f54196bc4bcb37</sys_package>
        <sys_policy/>
        <sys_scope display_value="Documentation Helper">c22d27fa1b20111090f54196bc4bcb37</sys_scope>
        <sys_update_name>sys_script_include_d56f6b7e1b60111090f54196bc4bcb0f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-07-18 20:55:33</sys_updated_on>
    </sys_script_include>
</record_update>
